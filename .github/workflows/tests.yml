name: Tests

on:
  push:
    branches: ['**']
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install pre-commit
        run: pip install pre-commit==2.17.0
      - name: Run pre-commit
        run: pre-commit run --all-files

  cdk-mypy:
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: cdk
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Run mypy
        run: mypy .

  cdk-pytest:
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: cdk
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Run pytest
        run: pytest tests/

  cdk-lambda-runtime-pytest:
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: cdk/infrastructure/runtime/lambdas/snapshot
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Run pytest
        run: pytest tests/

  igvfd-pytest:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Set folder permissions for mounted volume
        run: |
          sudo useradd -u 1444 igvfd
          sudo usermod -a -G igvfd runner
          sudo chown -R runner:igvfd ./
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker/**', 'src/**', 'setup.cfg', 'pyproject.toml', 'requirements*.txt', 'docker-compose.test.yml', 'docker-compose.test-indexer.yml') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker images
        run: |
          mkdir -p /tmp/.buildx-cache
          export DOCKER_BUILDKIT=1
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/pyramid/Dockerfile -t igvfd-pyramid .
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/postgres/Dockerfile -t igvfd-postgres ./docker/postgres/
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/localstack/Dockerfile -t igvfd-localstack ./docker/localstack/
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/nginx/Dockerfile -t igvfd-nginx .
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/snoindex/Dockerfile -t igvfd-snoindex ./docker/snoindex/
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/dedup/Dockerfile -t igvfd-dedup ./docker/dedup/
      - name: Run tests
        run: |
          echo "Skipping tests"
          #docker-compose -f docker-compose.test.yml up --exit-code-from pyramid
          #docker-compose -f docker-compose.test-indexer.yml up --exit-code-from indexer-tests

  igvfd-check-opensearch-mappings:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-mappings-${{ hashFiles('docker/**', 'src/**', 'setup.cfg', 'pyproject.toml', 'requirements*.txt', 'docker-compose.yml') }}
          restore-keys: |
            ${{ runner.os }}-buildx-mappings-
            ${{ runner.os }}-buildx-
      - name: Build Docker images
        run: |
          mkdir -p /tmp/.buildx-cache
          export DOCKER_BUILDKIT=1
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/pyramid/Dockerfile -t igvfd-pyramid .
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/postgres/Dockerfile -t igvfd-postgres ./docker/postgres/
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/localstack/Dockerfile -t igvfd-localstack ./docker/localstack/
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/opensearch/Dockerfile -t igvfd-opensearch ./docker/opensearch/
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/nginx/Dockerfile -t igvfd-nginx .
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/snoindex/Dockerfile -t igvfd-snoindex ./docker/snoindex/
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache -f docker/dedup/Dockerfile -t igvfd-dedup ./docker/dedup/
      - name: Check OpenSearch mappings
        run: echo "Skipping OpenSearch mappings check" #docker-compose run pyramid /scripts/pyramid/diff-opensearch-mappings.sh
